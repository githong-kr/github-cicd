# This is a basic workflow to help you get started with Actions

name: github cicd

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Source Code Checkout
        uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Login to GitHub Container Rgistry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: read

    steps:
      - name: Source Code Checkout
        uses: actions/checkout@v4
    
      - name: Modify Docker-Compose File
        uses: jacobtomlinson/gha-find-replace@v2
        with: 
          find: "$IMAGE"
          replace: ${{ env.REGISTRY }}/${{ github.repository }}
          include: ./docker-compose.yml
        
      - name: Transfer Compose File
        uses: appleboy/scp-action@209e8c05e0492f6ed6fe8a22dfcaefb083c4cf35
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          source: ./docker-compose.yml
          target: ~/Documents/release/${{ github.repository }}
          rm: true
